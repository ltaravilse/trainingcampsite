<!--#include virtual="/header.shtml"-->
<body>
    <div id="wrapper">
        <!--#include virtual="/nav-es.shtml"-->
        <div id="page-wrapper" >
            <div id="page-inner">
                <div class="row">
                    <div class="col-md-12">
                     
                     <h2>Clases teóricas</h2> 
                     
                        <ul>
                            <li><a href="clases/intro.pdf">Charla de introducción al training camp.</a></li>
                        </ul>
                     
                        <h3>Clases iniciales:</h3> 
                            <ol>
                                <li> <a href="clases/ipc.pdf">E/S + Introdución</a>, a cargo de <em>Agustín Santiago Gutiérrez</em></li>
                                <li> <a href="clases/binary_search.pdf">Búsqueda binaria y ordenamiento</a>, a cargo de <em>Quimey Vivas</em></li>
                                <li> Programación dinámica, a cargo de <em>Mariano Crosetti</em> <br>
                                       <ul><li>  Mariano dictará un subconjunto de los siguientes temas, a definir y acorde al tiempo disponible: ¿Qué es la DP?
                                            Top Down y Bottom Up. Reconstruyendo la solución. K - ésima reconstrucción. Reducir una dimensión de memoria.
                                            Agregando una flag. Recuperando un parámetro. Dinámica en rangos. Dinámica en de máscara de bits.
                                            Dinámica en prefijos de números. Dinámica en frentes.
                                        </li></ul>
                                </li>
                                <li> Matemática, a cargo de <em>Ariel Zylber</em></li>
                                <li> Grafos, a cargo de <em>Matías Hunicken</em>
                                       <ul><li>  Temario <strong>tentativo</strong>: Representación de grafos, árboles, DFS/BFS, distancias mínimas (algoritmos de Dijkstra y Floyd), union-find, algoritmo de Kruskal.
                                        </li></ul>
                                </li>
                                    
                                <li> Estructuras de datos para programación competitiva, a cargo de <em>Quimey Vivas</em></li>
                                <li> Algoritmos golosos, a cargo de <em>Pablo Zimmermann</em></li>
                                    <ul><li> Introducción a los algoritmos golosos/voraces. Cómo pensarlos. Estrategia para usarlos en competencias. Teorema de la fruta golosa y del ordenamiento de a 2 (Taravilse, Álvarez). Falsos positivos: Los Greedy que no son Greedy. Ejemplos y anécdotas personales.
                                    </li></ul>                                
                                <li> Strings, a cargo de <em>Agustín Santiago Gutiérrez</em></li>
                                        <ul><li>Arreglo Z (ejemplo, buscar un string en otro). Bordes de una cadena (calculados a partir del arreglo Z, por ejemplo para encontrar sufijos o prefijos palindrómicos eficientemente). Hashing de Rabin-Karp y trucos asociados (o &quot;cómo usar hashing para computar casi cualquier cosa de strings&quot;, como por ejemplo todos los anteriores + el resultado del algoritmo de Manacher + el suffix array de un string). Tries.
                                        </li></ul>

                            </ol>
                        <h3>Clases avanzadas:</h3> 
                            <ol>
                                <li> <a href="clases/geomel.pdf">Geometría computacional</a>, a cargo de <em>Melanie Sclar</em></li>
                                    <ul><li> Elementos básicos: puntos, vectores y rectas. Operaciones importantes y  representación. Técnicas de barrido (&quot;sweep line&quot;): Par de puntos más cercano, Intersección de segmentos, Cápsula convexa (Convex Hull). Área de polígono y teorema de Pick.
                                    </li></ul>
                                <li> <a href="clases/chulltrick.pdf">Dualidad punto línea y &quot;convex hull trick&quot;</a>, a cargo de <em>Agustín Santiago Gutiérrez</em></li>
                                       <ul><li> &quot;Convex hull trick&quot; es una técnica conocida para calcular eficientemente &quot;El máximo de varias funciones lineales&quot;, sobre un cierto valor de x. La dualidad punto línea es una forma de transformar problemas con rectas en problemas con puntos, y viceversa. Además de aprender ambas, usaremos esta última técnica para entender de dónde viene el nombre medio misterioso de &quot;convex hull trick&quot;.
                                        </li></ul>

                                <li> Flujo máximo, a cargo de <em>Ariel Zylber</em></li>
                                    <ul><li>En la charla se tratarán algunos de los siguientes temas: Algoritmo para flujo máximo / corte mínimo, con énfasis en cómo utilizarlo para modelar y resolver problemas de competencias. Matching máximo bipartito. Teoremas de Konig y Hall. Mínima partición/cubrimiento por caminos. Teorema de Dilworth. Flujo de costo mínimo.
                                    </li></ul>
                                <li> Matemática: Combinatoria y probabilidad, a cargo de <em>Pablo Zimmermann</em></li>
                                    <ul><li> Introducción a la combinatoria. Formas de calcular números combinatorios. Principio de inclusión - exclusión. Nociones básicas de probabilidad en competencias. Introducción a Teoría de Juegos. Posiciones perdedoras. Nim y Misere Nim. Teorema de Sprague-Grundy.
                                    </li></ul>
                                <li> Estructuras de datos sobre árboles, a cargo de <em>Matías Hunicken</em></li>
                                       <ul><li>  Temario <strong>tentativo</strong>: heavy light decomposition, dsu on tree, centroid decomposition, link-cut tree.
                                        </li></ul>

                                <li> Suffix Automaton, a cargo de <em>Nicolás Álvarez</em></li>
                                
                                       <ul><li>  Suffix automaton: si bien ambas cosas son importantes, la charla se enfoca más en &quot;cómo utilizar la estructura para resolver los problemas&quot;, y no tanto en &quot;por qué se construye así el autómata&quot;. El suffix automaton es una estructura más avanzada y complicada, continuación natural de las estructuras básicas explicadas en la charla básica de strings.

                                        </li></ul>

                                
                            </ol>
                    <!-- Version 2016 
                     <h2>Clases teóricas</h2> 
                        <ol> 
                            <li><a href="/anteriores/2016/clases/00-Entrada-salida.pdf">Entrada-Salida</a></li>
                            <li><a href="/anteriores/2016/clases/01-Grafos.pdf">Grafos parte I</a></li>
                            <li><a href="/anteriores/2016/clases/02-DP.pdf">Programación Dinámica</a></li>
                            <li><a href="/anteriores/2016/clases/03-Estructuras.pdf">Estructuras de Datos</a></li>
                            <li><a href="/anteriores/2016/clases/04-DFS.pdf">Grafos parte II</a></li>
                            <li><a href="/anteriores/2016/clases/05-Greedy.pdf">Algoritmos Golosos</a></li>
                            <li><a href="/anteriores/2016/clases/06-BS.pdf">Búsqueda Binaria</a></li>
                            <li><a href="/anteriores/2016/clases/07-Geometria.pdf">Geometría</a></li>
                            <li><a href="/anteriores/2016/clases/08-Flujo.pdf">Flujo</a></li>
                            <li><a href="/anteriores/2016/clases/09-Strings.pdf">Strings</a></li>
                            <li><a href="/anteriores/2016/clases/10-Primalidad.pdf">Aritmética y Primalidad</a></li>
                            <li><a href="/anteriores/2016/clases/11-Juegos.pdf">Teoría de Juegos</a></li>
                        </ol>
                    -->
                    
                    </div>
                </div>              
            </div>
                      
        </div>
    </div> 
    <!--#include virtual="/scripts.shtml"-->
</body>
</html>
